//
// This class an universal way to embed dependencies into the final object
//

def universalEmbed(moduleSelector) {

    def resolvedSelector = moduleSelector
    if ( moduleSelector instanceof ProjectDependency ) {
        resolvedSelector = moduleSelector.getDependencyProject()
    }
    if ( moduleSelector instanceof String ) {
        resolvedSelector = rootProject.findProject(moduleToProject(moduleSelector))
    }
    if ( System.env.DEBUG ) {
        println "moduleSelector=${moduleSelector},resolvedSelector=${resolvedSelector}"
        for(Configuration c : resolvedSelector.configurations) {
            println "c=${c.getDisplayName()}"
        }
    }

    def selector = moduleSelector
    if ( hasProperty('buildFromLocal') ) {
        selector = resolvedSelector
    }

    if ( project.plugins.hasPlugin("com.android.library") ) {
        apply plugin: 'com.kezong.fat-aar'
        fataar {
            transitive = true
        }
        project.dependencies.embed selector
    } else {
        project.dependencies.implementation selector
    }
}



project.ext.set("universalEmbed",{ Object moduleSelector ->
        universalEmbed(moduleSelector)
})
