// root project of CodeEditor have common parts with modules so we manage that here

// src/main/groovy//settings//lib.gradle
def p(msg) {
	def debug = System.env.DEBUG
	if ( debug ) {
		println msg
	}
}
// src/main/groovy//settings//common.gradle
rootDir.eachDirRecurse { dir ->
  if ( ! ( dir.name.equals("buildSrc") )
	&& new File(dir, 'build.gradle').exists()
  ) {
    if ( ! rootDir.equals(dir.getPath()) ) {
	    def pname = dir.getPath().replace(rootProject.getProjectDir().getPath(),"")
	    pname=pname.replaceAll("/",":")
	    p "pname=${pname}"

            makeInclude(pname, dir)
    }
  }
}

// REQUIREMENTS:
//
//  - You must define makeInclude in particular implementations
//
// src/main/groovy//settings//root.gradle
def makeInclude(pname, dir) {
	String [] parts = dir.getParent().split("/")
	String lastPart = parts[parts.size()-1]
	p "lastPart=" + lastPart
	def lp = lastPart.replaceAll("CodeEditor-?", "")
	String res = pname
	if ( lp != "" ) {
		res = ""
	        String [] parts2 = pname.split(":")
	        parts2[parts2.size() - 1] = lastPart + "-" + parts2[parts2.size()-1]
	
	        for(String part : parts2) {
	                if ( ! part.equals("") ) {
	                        res += ":" + part
	                }
	        }
	}

        include("${res}")
        project("${res}").projectDir = file(dir.getPath())
}
