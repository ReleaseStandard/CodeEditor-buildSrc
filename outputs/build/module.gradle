def p(msg) {
	def debug = System.env.DEBUG
	if ( debug ) {
		println msg
	}
}

// deduce the remaining part from an entry object
def getRemainingPart(dir) {
  def remainPart = ""
  def projectDirectory = getProjectPath(dir)
  def rootProjectDirectory = rootDir.getPath()
  remainPart = projectDirectory.replace(rootProjectDirectory,"")
  remainPart = remainPart.replaceAll("/",":")
  return remainPart
}

def getProjectPath(obj) {
  if ( obj instanceof Project ) {
    return obj.projectDir.getPath()
  }
  if ( obj instanceof File ) {
      return obj.getPath()
  }
  return obj	
}

// produce project path from the moduleString
def moduleToProject(moduleString) {
  def trgGroup = "io.github.ReleaseStandard.CodeEditor"
  def parts = moduleString.split(":")
  def group = parts[0]
  def module = parts[1]
  def version = parts[2]
  def remainPart = group.replace(trgGroup,"")
  remainPart = remainPart.replace(".",":")
  def path = remainPart + ":${module}"
  return path
}

// BEGIN module.gradle
//
// Used to compile a module from CodeEditor (eg editor)
//  - modules used in all projects
//  - repositories
//  - system that allow to fetch the latest version from github
//  - include other plugins of this project
//
buildscript {
        ext["buildScriptRepos"] = {
                flatDir {
                        dirs 'libs'
                }
                google()
                mavenCentral()
                jcenter() // Warning: this repository is going to shut down soon
                maven { url = 'https://jitpack.io' }
	        maven { url = 'https://s01.oss.sonatype.org/content/groups/public/' }
                maven { url = "https://plugins.gradle.org/m2/" }
        }
        ext["buildScriptDep"] = {
                classpath "com.android.tools.build:gradle:4.2.1"
                classpath 'io.github.gradle-nexus:publish-plugin:1.1.0'
                classpath 'com.github.kezong:fat-aar:1.3.6'
                classpath 'org.netbeans.api:org-apache-tools-ant-module:RELEASE124'
                classpath "net.thauvin.erik.gradle:semver:1.0.4"
                classpath "com.github.johnrengelman:shadow:6.1.0"
		classpath 'org.jacoco:org.jacoco.core:0.8.1'
        }

        repositories buildScriptRepos
        dependencies buildScriptDep

}
//
// Setup root project
//
ext['githubOwner'] = "ReleaseStandard"
group = "io.github.${githubOwner}.CodeEditor"

apply plugin: "net.thauvin.erik.gradle.semver"

def usePlugin(project, plugin) {
	if ( System.env.USE_LOCAL_BUILDSRC ) {
                project.apply from: "${rootDir.getPath()}/buildSrc/outputs/build/${plugin}"
	} else {
		project.apply from: "https://raw.githubusercontent.com/${githubOwner}/CodeEditor-buildSrc/master/outputs/build/${plugin}"
	}
}
allprojects { Project p ->
        repositories buildScriptRepos
	usePlugin(p, "embed.gradle")
	usePlugin(p, "build.helper.gradle")
	p.apply plugin: 'jacoco'

	p.afterEvaluate {
		p.dependencies {
			testImplementation 'junit:junit:4.+'
		}
	}
}

usePlugin(project, "packaging.gradle")
usePlugin(project, "newVersion.gradle")
usePlugin(project, "mavenCentralPublish.gradle")

